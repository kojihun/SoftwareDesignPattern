1) 설계의 원리 (분할과 정복, 추상화, 단계적 분해, 모듈화)
  *분할과 정복
   -가장 세분화된 작은 시스템을 개발하고, 하나씩 위로 올라가면서 완성시키는 방법
   -하나의 일을 수행할 대 작은 단위로 나누고 각 작은 단위를 하나씩 끝내며 전체 일을 끝낸다는 의미
   
  *추상화(과정, 데이터, 제어추상화가 있음)
   -주어진 문제에서 현재의 관심사에 초점을 맞추기 위해, 특정한 목적과 관련된 필수 정보만 추출하여 강조하고 관련이 없는 세부 사항을 생략함으로써 본질적 문제에 집중하는 작업
   
  *단계적 분해
   -기능을 점점 작은 단위로 나누어 점차적으로 구체화 하는 방법으로 하향식 설계에서 사용
   -구조적 분석 방법에서 사용하는 자료흐름도가 그 예임
   
  *모듈화
   -가장 먼저 하는 작업이 실제로 개발할 수 있는 작은 단위로 나누는 것을 모듈화라고 함-하나 또는 몇 개의 논리적인 기능을 수행하기 위한 명령어들의 집합

2) 응집도
  -모듈 내부에 존재하는 구성 요소들 사이의 밀접한 정도
  -하나의 모듈 안에서 구성 요소들 간에 똘똘 뭉쳐 있는 정도로 평가
  
  *기능적 응집
   -함수적 응집
   -응집도가 가장 높은 경우이며 단일 기능의 요소로 하나의 모듈을 구성
   
  *순차적 응집
   -두 요소가 하나의 모듈을 구성한 경우
   -두 요소가 아주 밀접하므로 하나의 모듈로 묶을 만한 충분한 이유가 됨
   
  *교환적응집
   -같은 입력을 사용하는 구성 요소들을 하나의 모듈로 구성
   -구성 요소들이 동일한 출력을 만들어낼 때도 교환적 응집
   -요소들 간의 순서는 중요하지 않음
   
  *절차적응집
   -순서가 정해진 몇 개의 구성요소를 하나의 모듈로 구성
   -순서에 따라 수행
   
  *시간적 응집
   -같은 시간대에 함께 실행된다는 이유로 하나의 모듈로 구성
   
  *논리적응집
   -요소들 간에 공통점이 있거나 관련된 임무가 존재하거나 기능이 비슷한 이유로 모듈구성
   
  *우연적응집(유지보수가 어려움)
   -구성 요소들이 말 그대로 우연히 모여 구성
   -우연한 과정에서 같이 묶은 모듈

3) 결합도
  -모듈과 모듈 사이의 관계에서 관련정도
  -하나의 모듈 안에서 구송 요소들간에 똘똘 뭉쳐있는 정도로 평가
  
  *데이터 결합
   -모듈들이 매개변수를 통해 데이터만 주고받음으로써 서로 간섭을 최소화하는 관계
   -모듈 간의 독립성 보장
   
  *스탬프 결합
   -필요없는 데이터까지 전체 주고 받아야 하는 경우(레코드나 배열, 구조체)->해당 자료 구조의 일보만 사용하는 경우 스탬프 결합
   
  *제어 결합
   -제어 플래그를 매개변수로 사용하여 간섭하는 관계
   -제어 결합은 좋지 않은 방식
   
  *공통 결합
   -전역변수를 같이 사용하여 발생하는 관계
   -변수값이 변하면 모든 모듈이 영향을 받는다.
   
  *내용 결합
   -상대 모듈의 데이터를 직접 변경할 수 있어 서로 간섭을 가장 많이하는 관계(포인터)
   -가장 안좋은 방식
