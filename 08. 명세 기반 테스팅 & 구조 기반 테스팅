1) 7가지 테스팅 원리
 -원리 1: 테스팅은 결함이 존재함을 보여준다.
 -원리 2: 완벽한 테스팅은 불가능하다.
 -원리 3: 개발 초기에 테스팅 시작
 -원리 4: 결함 집중(발견된 곳 주변에 여러 개 같이 있음)
 -원리 5: 살충제 패러독스 – 면역문제
 -원리 6: 테스팅은 상황에 의존적이다.
 -원리 7: 오류 부재의 착각(테스팅을 통해 결함이 발견되지 않더라도 존재)

2) 개발 단계 별 테스팅 유형(test level/phase)
*컴포넌트(단위) 테스팅
 -각각의 모듈 또는 컴포넌트가 정상적 기능을 수행하는지 테스트
 -다른 부분과의 연계성을 고려하지 않고 테스트
 -테스트 대상: 소스코드
 
 -구조기반 기법을 주로 사용
  1.구문/분기/결정/MCDC테스팅
  2.동등 분할/경계 값 분석 테스팅 활용(명세 기반 기법)
 
 -단위 테스팅 종료 조건
  1.계획된 테스트 커버리지 달성
  2.단위 테스트 케이스 수와 수행 결과를 리뷰하여 최종 결정
 -테스트는 반복적으로 실행될수록 좋음
 -테스팅은 프로젝트 개발 주기 동안 지속적으로 실행되어야 함으로 자동화되어야함

*통합 테스팅
 -시스템 구성요소의 인터페이스 및 연동 기능을 구조적으로 테스트
 -통합 테스팅 접근법
  1.Big bang 방식: 모든 모듈 동시에 통합, 테스트 드라이버/스텁 없이 실제 모듈로 테 스트, 결함 격리 어려움
  2.Bottom up 방식: 가장 하부 모듈부터 통합, 테스트 드라이버 필요, 결함 격리 쉬움, 큰 문제(설계상 결함)을 나중에 발견하게 될 가능성 있음.
  3.Top down 방식: 가장 상부 모듈부터 통합, 테스트 스텁 필요, 결함 격리 쉬움, 수정 어려운 큰 문제를 하부에서 발견할 가능성 있음
  4.Backbone방식: 가장 중요하고 리스크가 높은 모듈로 초기 백본 형성, 필요시 테스트 드라이버/스텁 사용, 높은 리스크 순서로 통합 결합 발견
 -고객이 원하는 기능, 리스크, 모듈간 종속성등을 고려하여 통합순서를 결정

*시스템 테스팅
 -시스템에 대한 고객의 요구사항이 충족되는지 여부를 테스트
 -단위/통합 테스팅이 완료되어 기능상 문제가 없는 상태에서 실시
 -개발 조직과 테스트 조직의 원활한 정보 공유와 협력 중요
 
 -시스템 테스팅의 test basis
  1.요구사항 명세서, 리스크 분석결과, 비즈니스 절차, 유스 케이스, 시스템 동작 명세서
 
 -기능적 요구사항과 비기능적 요구사항 포함
  1.기능적 요구사항: 명세 기반 기법, 구조 기반 기법
  2.비기능적 요구사항: 성능 테스팅, 사용성 테스팅, 신뢰성 테스팅등

*인수 테스팅
 3) 명세 기반 테스트 설계 기법의 종류(블랙박스 테스팅)

*동등 분할 기법
 -각 영역에 해당하는 입력 값을 넣고 예상되는 출력 값이 나오는지 실제 값과 비교
 -단순하고 이해하기 쉬우며 사용자가 작성 가능
 -입력 값이 문자인 경우에도 무효 값이 될 수 있다. 

*경계 값 분석 기법
 -경계에 있는 값을 테스트 데이터로 생성하여 테스트하는 방법
 -경계 값과 경계 이전 값, 경계 이후 값을 가지고 테스트

*구문 테스팅 기법
 -테스트 항목에 대한 입력으로 정규 표현식으로 정의된 구문 모델을 사용
 -구문은 그림 또는 텍스트 형식으로 표현 가능
 -기능 적합성 테스트에 사용

*유스케이스 테스팅
 -명세 기반 테스트 설계 기법으로 시스템 기능의 동작 여부 확인에 편리
 -요구사항 정의를 통하여 식별된 주요 요구사항에 대해 분석 단계에서 유스 케이스를 작성하면 설계, 구현, 테스팅 단계에서 활용가능
 -유스케이스 = 시스템 기능

*조합 테스팅
*결정 테이블 테스팅
*상태 전이 테스팅

4) 구조 기반 테스트 설계 기법의 종류(화이트박스 테스팅)
 -SW코드나 설계 등 구조를 표현하는 정보로부터 테스트케이스 도출

*테스트 검증기준 측정
 -시스템 또는 SW의 구조가 테스트 스위트에 의해 테스트 되는 정도
 -테스팅의 충분함을 측정

*문장 테스팅
 -테스트 조건: 실행 가능한 문장
 -기계어 코드와 관련 있는 문장: 실행 가능

*분기 테스팅
 -제어 흐름 모델의 분기가 테스트 조건

*결정 테스팅
 -제어 흐름 모델의 각 결정(조건문/반복문)이 테스트 조건

*분기 조건 테스팅
*분기 조건 조합 테스팅
*수정 조건 결정 커버리지 테스팅
*자료 흐름 테스팅

